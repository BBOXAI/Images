name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # Windows
          - goos: windows
            goarch: amd64
            suffix: .exe
          - goos: windows
            goarch: arm64
            suffix: .exe
          # Linux
          - goos: linux
            goarch: amd64
            suffix: ''
          - goos: linux
            goarch: arm64
            suffix: ''
          - goos: linux
            goarch: arm
            goarm: 7
            suffix: ''
          # macOS
          - goos: darwin
            goarch: amd64
            suffix: ''
          - goos: darwin
            goarch: arm64
            suffix: ''
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: '1.23'
    
    - name: Build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        GOARM: ${{ matrix.goarm }}
      run: |
        if [ "${{ matrix.goarm }}" != "" ]; then
          output_name="webpimg-${{ matrix.goos }}-${{ matrix.goarch }}v${{ matrix.goarm }}${{ matrix.suffix }}"
        else
          output_name="webpimg-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.suffix }}"
        fi
        go build -ldflags="-s -w" -o "${output_name}" main.go
        # 压缩二进制文件
        if [ "${{ matrix.goos }}" != "windows" ]; then
          tar czf "${output_name}.tar.gz" "${output_name}"
          rm "${output_name}"
        else
          zip "${output_name%.exe}.zip" "${output_name}"
          rm "${output_name}"
        fi
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binary-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goarm }}
        path: |
          *.tar.gz
          *.zip
  
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        pattern: binary-*
        merge-multiple: true
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: artifacts/*
        generate_release_notes: true
        draft: false
        prerelease: false